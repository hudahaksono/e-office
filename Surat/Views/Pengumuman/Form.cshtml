@model Surat.Models.Entities.DataPengumuman

@{
    var lstNull = new List<SelectListItem>();

    var lstJadwal = new List<SelectListItem>();
    lstJadwal.Add(new SelectListItem { Text = "Sekali", Value = "once" });
    lstJadwal.Add(new SelectListItem { Text = "Berjangka", Value = "range" });
}

<script src='@Url.Content("~/resources/js/jquery.form.js")' type="text/javascript"></script>
<script src='@Url.Content("~/resources/js/jqueryautocomplete/jquery.autocomplete.js")' type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse(this);
    });
</script>

<style type="text/css">
    .progress-label {
        position: absolute;
        left: 50%;
        top: 5px;
        font-weight: bold;
        text-shadow: 1px 1px 0 #fff;
    }

    .progress {
        position: relative;
        width: 100%;
        border: 1px solid #ddd;
        padding: 1px;
        border-radius: 3px;
    }

    .bar {
        background-color: #B4F5B4;
        width: 0%;
        height: 20px;
        border-radius: 3px;
    }

    .percent {
        position: fixed;
        display: inline-block;
        top: 3px;
        left: 48%;
    }
</style>


<div class="row">
    <div class="col-md-12 col-xs-12">
        <div class="">

            <form class="form-horizontal form-label-left" id="frmSimpan" method="post" enctype="multipart/form-data">

                <div class="x_panel" style="padding-top: 20px; padding-bottom: 10px; margin-bottom: 10px;">
                    <div class="row">
                        @Html.HiddenFor(model => model.UnitKerjaId)
                        @Html.HiddenFor(model => model.PengumumanID)
                        <div class="col-md-6 col-xs-12">
                            <div class="form-group">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="Judul">Judul Pengumuman <span style="color:red">*</span></label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.TextBoxFor(model => model.Judul, new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group" style="display:none">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="cmbPilihJadwal">Jadwal Pengumuman <span style="color:red">*</span></label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("cmbPilihJadwal", lstJadwal, new { @class = "select2_single form-control input-md", @style = "width:100%", @onchange = "pilihJadwal()" })
                                </div>
                            </div>
                            <div class="form-group jadwal" id="once">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="ValidSejak">Tanggal Aktif <span style="color:red">*</span></label>
                                <div class="col-md-5 col-sm-5 col-xs-12">
                                    <div class='input-group date' id='tglValidSejak' style="margin-bottom: 0px;">
                                        @Html.TextBoxFor(model => model.ValidSejak, new { @class = "form-control", @required = "required" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group jadwal" id="once">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="ValidSampai">Tanggal Berakhir <span style="color:red">*</span></label>
                                <div class="col-md-5 col-sm-5 col-xs-12">
                                    <div class='input-group date' id='tglValidSampai' style="margin-bottom: 0px;">
                                        @Html.TextBoxFor(model => model.ValidSampai, new { @class = "form-control", @required = "required" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="Target">Penerima <span style="color:red">*</span></label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownListFor(model => model.Target, Model.PilihanTarget, new { @class = "select2_single form-control input-md", @style = "width:100%" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="Isi">Isi Pengumuman <span style="color:red">*</span></label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.TextAreaFor(model => model.Isi, new { @class = "form-control", @rows = "8", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="ImageUrl">Gambar <i class="fa fa-file-image-o"></i> </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.TextBoxFor(model => model.ImageUrl, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4 col-sm-4 col-xs-12" for="Url">Tautan <i class="fa fa-link"></i> </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.TextBoxFor(model => model.WebUrl, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-xs-12">
                            <div id="divPilihUnitKerja">
                                <div class="x_title">
                                    <h2 class="mytitleform">UNIT KERJA PENERIMA</h2>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Unit Kerja <span style="color:red">*</span></label>
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownListFor(model => model.UnitKerjaPenerima, new SelectList(@Model.ListUnitKerja, "UnitKerjaId", "NamaUnitKerja"), "", new { @class = "select2_single form-control input-md", @style = "width:100%" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-sm-8 col-xs-12 col-md-offset-4">
                                        <button id="btnTambahUnitKerja" type="button" class="btn btn-primary">Tambah</button>
                                    </div>
                                </div>
                                @Html.Hidden("lstUnitKerja")
                                <div class="table-responsive" style="padding-right:10px; padding-left:10px;">
                                    <table class="table-bordered" style="width:100%;height:30px;">
                                        <tr>
                                            <th style="text-align:left;padding-left:3px;">Unit Kerja</th>
                                            <th class="centertaligncolumn" style="width:57px;">&nbsp;</th>
                                        </tr>
                                    </table>
                                    <div style="height:120px; overflow-y: scroll;">
                                        <table id="tblUnitKerjaPenerima" class="table-striped table-bordered" style="width:100%">
                                            <tbody id="tujuanplaceholder"></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            @*<div id="divPilihFile">
                                <div class="x_title">
                                    <h2 class="mytitleform">GAMBAR PENGUMUMAN</h2>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="x_content" id="OneImage">
                                    <div class="form-group" id="divUpload">
                                        <div class="input-group" style="margin-bottom:0px">
                                            @Html.TextBoxFor(model => model.NamaFile, new { @class = "form-control", @readonly = "readonly", @onclick = "$('#btnUploadFile').click();" })
                                            <div class="input-group-btn">
                                                <label class="btn btn-success btn-file">
                                                    <i class="fa fa-search"></i><input class="" type="file" name="filename" id="btnUploadFile" accept="image/jpg, image/jpeg, image/png" hidden style="width:70px;">
                                                </label>
                                            </div>
                                        </div>
                                        <small><span id="validFile" class="error"></span></small>
                                    </div>
                                    <div id='fileDokumen'></div>
                                </div>
                                <div class="x_content" id="ListFile" style="display:none;">
                                    <div class="uploadsection">
                                        <div id="fileUploaded">
                                            <ul class="nav nav-tabs">
                                                <li class="active" role="presentation" onclick="btnTambahFileUp()"><a style="cursor:pointer" id="tambahFile"><i class="fa fa-plus-square" style="font-size:1.2em"></i>&nbsp;Tambah File</a></li>
                                            </ul>
                                            <div class="tab-content" id="tabPdf">
                                            </div>
                                        </div>
                                        <div id="fileHide">
                                            <input type="file" id="file1" name="fileUploadStream" style="display:none">
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>

                <div class="title_right col-md-12 col-xs-12">
                    <div class="pull-right" style="padding-bottom:10px;">
                        <button type="submit" class="btn btn-success">Simpan</button>
                        <button type="button" data-dismiss="modal" class="btn btn-warning">Batal</button>
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('#divPilihUnitKerja').hide();
        $('.jadwal').hide();
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)?(?:,\d+)?$/.test(value);
        }

        $('.select2_single').select2({ width: 'resolve' });

        $('#tglValidSejak, #ValidSejak, #tglValidSampai, #ValidSampai').datetimepicker({
            format: 'DD/MM/YYYY',
            locale: 'id'
        });

        $('#myModalDocViewer').on('shown.bs.modal', function () {
            $(this).find('.modal-dialog').css({
                width: '98%',
                height: '98 %',
                'max-height': '98%'
            });
        });

        var unitkerjaid = $('#UnitKerjaId').val();
        if (unitkerjaid !== null && unitkerjaid !== '') {
            $('#cmbUnitKerjaTujuan').val(unitkerjaid).trigger('change');
        }

        if ($('#UnitKerjaPenerima').val() == "") {
            $('#Target').val(unitkerjaid).trigger('change');
        }

        var id = $('#PengumumanID').val();
        if (id != "") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("cekFile", "Public")',
                data: { id: id },
                success: function (data) {
                    if (data.Status === false) {
                        $("#fileDokumen").html('');
                    }
                    else {
                        var objurl = '@Url.Action("GetImagePengumuman", "Pengumuman")?id=' + id + '&unitkerjaid=' + unitkerjaid;
                        objfile = objurl;

                        showloading("Menampilkan File Terpilih");
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("ImageViewerWithoutHeader", "Konten")',
                            success: function (data) {
                                $('#fileDokumen').html(data);
                                closeloading();
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                swal(textStatus, "Terjadi Kesalahan \n" + errorThrown, "warning");
                            }
                        });
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    swal(textStatus, "Terjadi Kesalahan \n" + errorThrown, "warning");
                }
            });
        }
    });

    $('#Isi').on('keypress', function (e) {
        var ingnore_key_codes = [34, 39];
        if ($.inArray(e.which, ingnore_key_codes) >= 0) {
            e.preventDefault();
        }
    });

    $("#frmSimpan").submit(function (e) {
        if ($("#frmSimpan").valid()) {
            var frmdata = new FormData();
            var target = $('#Target').val();
            var arrTujuan = new Array();
            $("#tujuanplaceholder tr").each(function () {
                var row = $(this);
                var tujuan = {};
                tujuan.UnitKerjaId = row.find("label").eq(0).html();
                arrTujuan.push(tujuan);
            });
            if (arrTujuan.length == 0 && (target == "Custom")) {
                swal("Peringatan", "Harap Pilih Tujuan Lebih Dahulu", "warning")
                $('#proses-btn').attr('disabled', false);
                return false;
            }
            swal({
                title: "Konfirmasi Proses",
                text: "Simpan Data Pengumuman",
                type: "info",
                showCancelButton: true,
                closeOnConfirm: false,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya",
                cancelButtonText: "Batal",
                showLoaderOnConfirm: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        frmdata.append("PengumumanID", $('#PengumumanID').val());
                        frmdata.append("Judul", $('#Judul').val());
                        frmdata.append("Isi", $('#Isi').val());
                        frmdata.append("ValidSejak", $('#ValidSejak').val());
                        frmdata.append("ValidSampai", $('#ValidSampai').val());
                        frmdata.append("Target", target);
                        //var dataSend = {};
                        //dataSend.PengumumanID = $('#PengumumanID').val();
                        //dataSend.Judul = $('#Judul').val();
                        //dataSend.Isi = $('#Isi').val();
                        //dataSend.ValidSejak = $('#ValidSejak').val();
                        //dataSend.ValidSampai = $('#ValidSampai').val();
                        //dataSend.Target = target;
                        if (target == "Custom") {
                            frmdata.append("ListUnitKerja", JSON.stringify(arrTujuan))
                            //dataSend.ListUnitKerja = arrTujuan;
                        } else {
                            frmdata.append("UnitKerjaPenerima", target);
                            //dataSend.UnitKerjaPenerima = target;
                        }
                        frmdata.append("WebUrl", $('#WebUrl').val());
                        frmdata.append("ImageUrl", $('#ImageUrl').val());
                        //dataSend.Url = $('#Url').val();

                        if (dfFileDokumen !== null) {
                            var namafile = dfFileDokumen.name;
                            var tipefile = dfFileDokumen.type;
                            var fileExt = '.' + namafile.toLowerCase().split('.').pop();
                            if (fileExt !== null && fileExt !== '') {
                                if (tipefile != 'image/jpeg' && tipefile != 'image/png')  {
                                    swal("Peringatan", "File harus gambar", "warning")
                                    return false;
                                }
                                //dataSend.NamaFile = namafile;
                                //dataSend.Ekstensi = fileExt;
                                //dataSend.file = dfFileDokumen;
                                frmdata.append("NamaFile", namafile);
                                frmdata.append("Ekstensi", fileExt);
                                frmdata.append("file", dfFileDokumen);
                            }
                            else {
                                swal("Peringatan", "File tidak diketemukan", "warning")
                            }
                        }

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SimpanPengumuman", "Pengumuman")',
                            //data: JSON.stringify(dataSend),
                            data: frmdata,
                            contentType: false,
                            processData: false,
                            //contentType: "application/json; charset=utf-8",
                            //dataType: "json",
                            success: function (data, textStatus, XMLHttpRequest) {
                                if (data.Status) {
                                    swal("Informasi", data.Pesan, "success")
                                    dtableDaftarList.ajax.reload(null, true);
                                    $('#myModalDocViewer').modal('hide');
                                }
                                else {
                                    swal("Peringatan", data.Pesan, "warning")
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                swal(textStatus, "Terjadi Kesalahan \n" + errorThrown, "warning");
                            }
                        });
                    }
                });
        }

        e.preventDefault();
        return false;
    });

    $("#btnTambahUnitKerja").on("click", function (e) {
        showloading("Menambahkan Unit Kerja");
        var vcheck_UnitKerjaId = $('#UnitKerjaPenerima').val();
        if (vcheck_UnitKerjaId == '') {
            swal("Peringatan", "Unit Kerja Belum Anda Pilih", "warning")
            return false;
        }
        var NamaUnitKerja = $('#UnitKerjaPenerima :selected').text();
        $('#tujuanplaceholder').append("<tr><td><label style='display:none;'>" + vcheck_UnitKerjaId + "</label>" + NamaUnitKerja + "</td><td style='width: 40px;cursor: pointer;' onclick='hapusUnitKerjaPenerima(this)'><i class='fa fa-trash'></i></td></tr>");
        e.preventDefault();
        return false;
    });

    // FILE Dokumen -------------------------------
    var dfFileDokumen = null;
    $("#btnUploadFile").on("change", function (e) {
        var input = $(this),
            numFiles = input.get(0).files ? input.get(0).files.length : 1;
        if (numFiles > 0) {
            var file = dfFileDokumen = input.get(0).files[0];

            if (file.size > 20000 * 1024) {
                dfFileDokumen = null;
                showmsg('Peringatan', 'File maksimum 20Mb');
                $("#namafile").val("");
                $('#fileDokumen').html("");
                return false;
            }
            else {
                $("#validFile").html("");

                if (dfFileDokumen == null) {
                    return false;
                }
                var namafile = dfFileDokumen.name;
                $("#namafile").val(namafile);
                var filedokumen = dfFileDokumen;
                var tipefile = filedokumen.type;

                if (tipefile == 'application/pdf') {
                    var blob = new Blob([dfFileDokumen], { type: "application/pdf;base64" }),
                        objurl = window.URL.createObjectURL(blob);
                    objpdf = objurl;

                    if ($("#fileDokumen").height() < 500) $("#fileDokumen").height(500);
                    PDFObject.embed(objpdf, $("#fileDokumen"), { forcePDFJS: true, PDFJS_URL: '@Url.Content("~/Contents/pdfviewer.html")' });
                }
                else if (tipefile == 'image/jpeg' || tipefile == 'image/png') {
                    var blob = new Blob([dfFileDokumen], { type: tipefile + ";base64" }),
                        objurl = window.URL.createObjectURL(blob);
                    objfile = objurl;

                    showloading("Menampilkan File Terpilih");
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ImageViewerWithoutHeader", "Konten")',
                        success: function (data) {
                            $('#fileDokumen').html(data);
                            closeloading();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            swal(textStatus, "Terjadi Kesalahan \n" + errorThrown, "warning");
                        }
                    });
                } else {
                    swal("Peringatan", "Format File Tidak Dapat Digunakan", "warning")
                }
            }
        }
    });
    var fileCount = 1;
    function btnTambahFileUp() {
        $(`#file${fileCount}`).trigger("click")
    }

    $("#fileHide").delegate("input[type='file']", "change" ,function () {
        var filename = $(this).attr('id')
        var input = $(this),
            numFiles = input.get(0).files ? input.get(0).files.length : 1;
        if (numFiles > 0) {
            var file = dfFileDokumen = input.get(0).files[0];
            if (file.size > 20000 * 1024) {
                dfFileDokumen = null;
                showmsg('Peringatan', 'File maksimum 20Mb');
                return false;
            }
            else {
                if (dfFileDokumen == null) {
                    return false;
                }
                var namafile = dfFileDokumen.name;
                if (namafile.length > 100) {
                    dfFileDokumen = null;
                    showmsg('Peringatan', 'Nama File Maksimal 100 Karakter');
                    return false;
                }
                var filedokumen = dfFileDokumen;
                var tipefile = filedokumen.type;

                afterUploadedFile(filename, namafile, tipefile)
                fileCount++
                $("#fileHide").append(`<input type="file" id="file${fileCount}" name="fileUploadStream" style="display:none">`)
            }
        }
    })

    function afterUploadedFile(filename, namafile, tipefile) {
        $("#fileUploaded ul").prepend(`
            <li role="presentation"><a href="#upload${filename}" aria-controls="upload${filename}" role="tab" data-toggle="tab" style="cursor:pointer"><i class="fa fa-file-pdf-o" style="font-size:1.2em"></i></a></li>
        `)
        $("#tabPdf").prepend(`
            <div role="tabpanel" class="tab-pane fade in" id="upload${filename}">
                <div class="PdfDetail" style="padding:5px 10px; background-color:rgba(222, 222, 222, 1)">
                    <h5> <span  class="filename">${namafile}</span> <span class="hapus pull-right" style="color: red;cursor:pointer;" onclick="HapusPdf(this)">Hapus</span></h5>
                </div>
                <div class="PdfHolder">

                </div>
            </div>
        `)

        if (tipefile == 'application/pdf') {
            var blob = new Blob([dfFileDokumen], { type: "application/pdf;base64" }),
                objurl = window.URL.createObjectURL(blob);
            objpdf = objurl;

            if ($(`#upload${filename} .PdfHolder`).height() < 600) $(`#upload${filename} .PdfHolder`).height(600);
            PDFObject.embed(objpdf, $(`#upload${filename} .PdfHolder`), { forcePDFJS: true, PDFJS_URL: '@Url.Content("~/Contents/pdfviewer.html")' });

            $(`#fileUploaded ul li a[aria-controls="upload${filename}"]`).tab('show');
        }
    }

    function HapusPdf(element) {
        var tabelmnt = $(element).closest('.tab-pane')
        var idelmnt = tabelmnt.attr('id')
        $(`#fileUploaded ul li a[aria-controls="${idelmnt}"]`).remove()
        tabelmnt.remove()
        $('.nav-tabs li:eq(' + 0 + ') a').tab('show');
    }
</script>